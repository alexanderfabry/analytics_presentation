---
title: "interface builder 4"
slide: true
---

<style>blockquote {  font-size: 1.5em; } </style>

<div class="slide">

h1. Analytics
  
h2. We need information to make product decisions. We get this information from a variety of sources

h2. We get qualitative information about product decisions from

* Designers, product, and domain experts
* Advisors
* Usability testers

<br>

h2. Analytics are tools to gather <b> quantitative </b> data about how users interact with a website

</div><div class="slide">

h1. What do we use?
  
h2. <a href="https://www.google.com/analytics/" target="_blank"> <img src="http://upload.wikimedia.org/wikipedia/commons/5/5c/Google_Analytics_logo.png" > </a>

* Pageviews
* User segmentation
* Time on site
* Bounce rate
* Browser capabilities
* Anonymous event tracking

</div><div class="slide">

h1. What do we use?

h2. <a href="http://kissmetrics.com" target="_blank"> <img src="https://www.kissmetrics.com/images/external/km_logo.png"> </a>

* Funnel conversions
* Cohort analysis
* Named user event tracking
* User timeline

</div><div class="slide">

h1. What do we use?

h2. <a href="https://github.com/jkrall/analytical" target="_blank"> Analytical Gem </a>

* Turns our analytics on or off depending on whether you're an admin or no
* Manages analytics in development / testing / staging / production environments

</div><div class="slide">


h1. How does this work?

h4(code_heading).  main.html.haml 

<br> 

{% highlight haml %}
  
  !!!
  - ie_tag(:html) do
  
    %head    

      = raw analytical.head_prepend_javascript
      
      = render partial: 'layouts/common_head'

      = include_stylesheets :common, :client

      - analytical.identify current_user.id, :email => current_user.email
      = raw analytical.now.custom_variable(1, 'User Type', 'Member', 2)
      = raw analytical.head_append_javascript

    %body
    
      = raw analytical.body_prepend_javascript
      
      -#Header
      -#Frames
      -#Footer
      
      = raw analytical.body_append_javascript

{% endhighlight %}

</div><div class="slide">

h1. How about Google Analytics?

h2. There are a few main types of things we track with Google

* Page Views
* Custom Variables: User vs Member
* Events

</div><div class="slide">

h1. Page Views

h4(code_heading).  ga.js

<br>

{% highlight javascript %}
  
var _gaq = _gaq || [];
  _gaq.push(['_setAccount', '#{options[:key]}']);
  _gaq.push(['_setDomainName', '#{options[:domain]}']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

{% endhighlight %}

</div><div class="slide">

h1. _gaq.push

* You'll see _gaq.push and _kmq.push all over our tracking
* _gaq is an array into which tracking commands are pushed
* The ga.js script is fetched from Google servers
* This script looks for elements in _gaq and executes the associated tracking command

</div><div class="slide">

h1. _gaq.push

h2. ga.js then send a requests for a single-pixel gif to Google's servers

h2. This gif requests includes variables which encode things like:

* Cookies that have been set by Google 
* Browser and OS settings
* Type of requests and associated data
* Transactional information...

Part of a sample gif request:

<img src="http://http://f.cl.ly/items/301f0q2O343O2B012N45/Screen%20Shot%202012-01-23%20at%2010.10.50%20PM.png">

</div><div class="slide">    

h1. Type of Request: Page View

h4(code_heading).  client.coffee

<br>

{% highlight coffeescript %}
  
  class App.Routers.Client extends App.Router
  
  routes:
    ''                     : 'home'
    'gene/:id'             : 'gene'
    
  initialize: ->
    @viewState = new App.Models.ViewState
      home      : { obj: App.Views.HomeIndex }
      gene      : { obj: App.Views.GeneFrame }
        
  any: ->
    $('#zoom_light_box, .ui-dialog, .ui-widget-overlay').css('display', 'none')
    $('#feedback').dialog('close')
    
    _gaq.push(["_trackPageview", window.location.pathname + window.location.hash])

{% endhighlight %}

</div><div class="slide">

h1. Track Page View 

<br>

{% highlight coffeescript %}
  
  _trackPageview("customURL")

{% endhighlight %}

<br>

{% highlight coffeescript %}
  
   _gaq.push(["_trackPageview", window.location.pathname + window.location.hash])

{% endhighlight %}

<br>

h2. So what happens here? Let's say we're looking at the Home Carousel and search for "Photography"

* window.location.pathname will return "/"
* window.location.hash will return "#!/gene/photography"

<br>

h2. Google then tracks that there was a page view at the location "/#!/gene/photography"

</div><div class="slide">


h1. Custom Variables


{% highlight javascript %}

  _setCustomVar(index, name, value, scope)

{% endhighlight %}

<br>

{% highlight javascript %}

  _gaq.push(["_setCustomVar", 1, "User Type", "Member", 1])

{% endhighlight %}

<br>

h2. This sends our custom variables with the next trackPageview event

* Index is allows you to sort custom variables
* Name identifies the type of thing you're tracking ("User Type")
* Value is the value associated with the type you're tracking ("Member")
* Scope determines whether this is user-level, session-level, or page-level ("1" i.e. user-level)

</div><div class="slide">

h1. Event tracking

h2. Here is where we can go crazy

{% highlight javascript %} 
_trackEvent(category, action, opt_label, opt_value, opt_noninteraction)

{% endhighlight %}

<br>

h2. We use these parameters like this:

* category = Where the action happened (i.e. which route)
* action = What was UI object was interacted with
* opt_label = Qualifier on that interaction


{% highlight javascript %}
  
  _gaq.push(['_trackEvent', App.router.trackedRoute(), 'Artwork clicked', 'Carousel'])

{% endhighlight %}

<br>

h2. This means that if you're on the homepage and you click the center artwork in the carousel, then an event is tracked with the parameters (Home, Artwork clicked, Carousel)

</div><div class="slide">

h1. Examples of tracked events

bq.         
  <b>Action, Label</b>
  Follow, Added
  Follow, Removed
  Save, Added
  Save, Removed
  Purchase Info, Hover
  Purchase Info, Send
  View In Room
  Artist, Clicked
  Artwork, Clicked
  Gene, Clicked
  Browse, From Header
  Home, From Header
  Collections, From Header
  Browse, See More
  Carousel, Viewed
  Carousel, Scrolled

</div><div class="slide">

h1. Many can happen from any route

bq.         
  <b>Routes:</b>
  'home'
  'tour'
  'tastetest'
  'forYou'
  'userEdit'
  'invite'
  'page'
  'exhibition'
  'tag'
  'gene'
  'artist'
  'artwork'

</div><div class="slide">


h1. You can analyze each of these parameters separately
  
* For instance, what do users do when they get to the homepage?
* Where do users open the browse menu most often from?
* Where do users search from?
* Where do users follow from?

</div><div class="slide">

h1. Examples

</div><div class="slide">

h1. The Future of Tracking

* Better event tracking
* Track scrolling
* Better user segmentation / custom variables
* A/B testing
* Refactor to make analytics more maintainable
* Better testing of analytics
* Internal analytics -- inquiry requests, search logs, etc

</div>